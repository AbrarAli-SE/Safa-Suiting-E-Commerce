<%- include('../shared/header') %>

<body class="bg-[var(--color-gray-50)]">
  <!-- Main Content -->
  <main class="container mx-auto px-4 py-12 mt-[110px]">
    <!-- Sub-Navigation Bar -->
    <nav class="fixed top-[60px] left-0 w-full bg-[var(--color-white)] border-b border-[var(--color-red-500)] shadow-md z-40">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-3 flex justify-center items-center gap-6 md:gap-8">
        <div class="flex items-center space-x-6 md:space-x-8">
          <a href="/user/dashboard" class="text-[var(--color-black)] font-semibold hover:text-[var(--color-red-500)] transition-colors duration-300 flex items-center group relative">
            <i class="bi bi-person text-xl md:text-lg md:mr-2"></i>
            <span class="hidden md:inline">Profile Settings</span>
            <span class="absolute hidden group-hover:block bottom-full mb-2 left-1/2 transform -translate-x-1/2 px-3 py-1 bg-[var(--color-black)] text-[var(--color-white)] text-xs rounded-md whitespace-nowrap pointer-events-none transition-opacity duration-200 opacity-0 group-hover:opacity-100 tooltip">Profile Settings</span>
          </a>
          <a href="/user/order/user-order" class="text-[var(--color-black)] font-semibold hover:text-[var(--color-red-500)] transition-colors duration-300 flex items-center group relative">
            <i class="bi bi-bag text-xl md:text-lg md:mr-2"></i>
            <span class="hidden md:inline">My Orders</span>
            <span class="absolute hidden group-hover:block bottom-full mb-2 left-1/2 transform -translate-x-1/2 px-3 py-1 bg-[var(--color-black)] text-[var(--color-white)] text-xs rounded-md whitespace-nowrap pointer-events-none transition-opacity duration-200 opacity-0 group-hover:opacity-100 tooltip">My Orders</span>
          </a>
          <a href="/user/order/cancel-order" class="text-[var(--color-black)] font-semibold hover:text-[var(--color-red-500)] transition-colors duration-300 flex items-center group relative">
            <i class="bi bi-x-circle text-xl md:text-lg md:mr-2"></i>
            <span class="hidden md:inline">Cancellations</span>
            <span class="absolute hidden group-hover:block bottom-full mb-2 left-1/2 transform -translate-x-1/2 px-3 py-1 bg-[var(--color-black)] text-[var(--color-white)] text-xs rounded-md whitespace-nowrap pointer-events-none transition-opacity duration-200 opacity-0 group-hover:opacity-100 tooltip">Cancellations</span>
          </a>
          <a href="/auth/logout" class="text-[var(--color-black)] font-semibold hover:text-[var(--color-red-500)] transition-colors duration-300 flex items-center group relative">
            <i class="bi bi-box-arrow-right text-xl md:text-lg md:mr-2"></i>
            <span class="hidden md:inline">Logout</span>
            <span class="absolute hidden group-hover:block bottom-full mb-2 left-1/2 transform -translate-x-1/2 px-3 py-1 bg-[var(--color-black)] text-[var(--color-white)] text-xs rounded-md whitespace-nowrap pointer-events-none transition-opacity duration-200 opacity-0 group-hover:opacity-100 tooltip">Logout</span>
          </a>
        </div>
        <div class="text-[var(--color-black)] text-sm hidden md:flex items-center ml-8">
          Welcome, <span class="text-[var(--color-red-500)] font-bold ml-1" id="nav-welcome-name"><%= user.name %></span>!
        </div>
      </div>
    </nav>

    <!-- Dashboard Content -->
    <div class="bg-[var(--color-white)] p-6 border border-[var(--color-red-500)] rounded-xl max-w-4xl mx-auto shadow-lg">
      <div id="message-container" class="mb-6"></div>

      <!-- Profile Update Form -->
      <div class="mb-10">
        <h2 class="text-[var(--color-red-500)] text-2xl font-semibold mb-4 flex items-center"><i class="bi bi-person-fill mr-2"></i> Edit Profile</h2>
        <form id="profileForm" class="space-y-6">
          <div class="grid grid-cols-1 sm:grid-cols-2 gap-6">
            <div class="space-y-2">
              <label class="block text-sm font-medium text-[var(--color-black)]">Full Name</label>
              <input 
                type="text" 
                id="name" 
                name="name" 
                value="<%= user.name %>" 
                class="w-full p-3 bg-[var(--color-gray-50)] border border-[var(--color-black)] rounded-md focus:outline-none focus:ring-2 focus:ring-[var(--color-red-500)] text-[var(--color-black)] transition-all duration-300 shadow-sm hover:shadow-md" 
                required>
              <div id="nameError" class="text-[var(--color-red-500)] text-sm hidden"></div>
            </div>
            <div class="space-y-2">
              <label class="block text-sm font-medium text-[var(--color-black)]">Email</label>
              <input 
                type="email" 
                id="email" 
                name="email" 
                value="<%= user.email %>" 
                class="w-full p-3 bg-[var(--color-gray-50)] border border-[var(--color-black)] rounded-md focus:outline-none focus:ring-2 focus:ring-[var(--color-red-500)] text-[var(--color-black)] transition-all duration-300 shadow-sm hover:shadow-md" 
                required>
              <div id="emailError" class="text-[var(--color-red-500)] text-sm hidden"></div>
            </div>
          </div>
          <div class="flex justify-end gap-4">
            <button type="reset" class="px-4 py-2 text-[var(--color-black)] hover:text-[var(--color-red-500)] transition-colors duration-300">Cancel</button>
            <button 
              type="submit" 
              class="px-6 py-2 bg-[var(--color-red-500)] text-[var(--color-white)] rounded-md hover:bg-[var(--color-red-700)] transition-all duration-300 flex items-center gap-2 shadow-md hover:shadow-lg">
              <i class="bi bi-save"></i> Save Changes
            </button>
          </div>
        </form>
      </div>

      <!-- Password Change Form -->
      <div>
        <h2 class="text-[var(--color-red-500)] text-2xl font-semibold mb-4 flex items-center"><i class="bi bi-lock-fill mr-2"></i> Change Password</h2>
        <form id="passwordForm" class="space-y-6">
          <div class="space-y-4 max-w-md">
            <div>
              <input 
                type="password" 
                id="currentPassword" 
                name="currentPassword" 
                placeholder="Current Password" 
                class="w-full p-3 bg-[var(--color-gray-50)] border border-[var(--color-black)] rounded-md focus:outline-none focus:ring-2 focus:ring-[var(--color-red-500)] text-[var(--color-black)] transition-all duration-300 shadow-sm hover:shadow-md" 
                required>
              <div id="currentPasswordError" class="text-[var(--color-red-500)] text-sm hidden"></div>
            </div>
            <div>
              <input 
                type="password" 
                id="newPassword" 
                name="newPassword" 
                placeholder="New Password" 
                class="w-full p-3 bg-[var(--color-gray-50)] border border-[var(--color-black)] rounded-md focus:outline-none focus:ring-2 focus:ring-[var(--color-red-500)] text-[var(--color-black)] transition-all duration-300 shadow-sm hover:shadow-md" 
                required>
              <div id="newPasswordError" class="text-[var(--color-red-500)] text-sm hidden"></div>
            </div>
            <div>
              <input 
                type="password" 
                id="confirmPassword" 
                name="confirmPassword" 
                placeholder="Confirm New Password" 
                class="w-full p-3 bg-[var(--color-gray-50)] border border-[var(--color-black)] rounded-md focus:outline-none focus:ring-2 focus:ring-[var(--color-red-500)] text-[var(--color-black)] transition-all duration-300 shadow-sm hover:shadow-md" 
                required>
              <div id="confirmPasswordError" class="text-[var(--color-red-500)] text-sm hidden"></div>
            </div>
          </div>
          <div class="flex justify-end">
            <button 
              type="submit" 
              class="px-6 py-2 bg-[var(--color-red-500)] text-[var(--color-white)] rounded-md hover:bg-[var(--color-red-700)] transition-all duration-300 flex items-center gap-2 shadow-md hover:shadow-lg">
              <i class="bi bi-key-fill"></i> Change Password
            </button>
          </div>
        </form>
      </div>
    </div>
  </main>

  <%- include('../shared/footer') %>

  <script>
    const profileForm = document.getElementById('profileForm');
    const passwordForm = document.getElementById('passwordForm');
    const messageContainer = document.getElementById('message-container');
    const navWelcomeName = document.getElementById('nav-welcome-name');
    const nameInput = document.getElementById('name');
    const emailInput = document.getElementById('email');
    const currentPassword = document.getElementById('currentPassword');
    const newPassword = document.getElementById('newPassword');
    const confirmPassword = document.getElementById('confirmPassword');
    const nameError = document.getElementById('nameError');
    const emailError = document.getElementById('emailError');
    const currentPasswordError = document.getElementById('currentPasswordError');
    const newPasswordError = document.getElementById('newPasswordError');
    const confirmPasswordError = document.getElementById('confirmPasswordError');

    // Fetch latest user data on page load
    async function loadUserData() {
      try {
        const response = await fetch("/user/profile-data", {
          method: "GET",
          headers: { "Content-Type": "application/json" },
          credentials: "include",
        });

        const result = await response.json();
        if (response.ok) {
          nameInput.value = result.user.name;
          emailInput.value = result.user.email;
          navWelcomeName.textContent = result.user.name;
        } else {
          console.error("‚ùå Fetch User Data Error:", result.error);
        }
      } catch (error) {
        console.error("‚ùå AJAX Fetch User Data Error:", error);
      }
    }

    // Load user data on page load
    loadUserData();

    // Validation Functions
    function validateName() {
      const value = nameInput.value.trim();
      if (value.length < 3) {
        nameError.textContent = "Name must be at least 3 characters long.";
        nameError.classList.remove('hidden');
        return false;
      }
      nameError.classList.add('hidden');
      return true;
    }

    function validateEmail() {
      const value = emailInput.value.trim();
      const emailPattern = /^[a-zA-Z0-9._%+-]+@gmail\.com$/;
      if (!emailPattern.test(value)) {
        emailError.textContent = "Enter a valid Gmail address.";
        emailError.classList.remove('hidden');
        return false;
      }
      emailError.classList.add('hidden');
      return true;
    }

    function validateCurrentPassword() {
      const value = currentPassword.value.trim();
      if (value.length === 0) {
        currentPasswordError.textContent = "Current password is required.";
        currentPasswordError.classList.remove('hidden');
        return false;
      }
      currentPasswordError.classList.add('hidden');
      return true;
    }

    function validateNewPassword() {
      const value = newPassword.value.trim();
      if (value.length < 6) {
        newPasswordError.textContent = "Password must be at least 6 characters long.";
        newPasswordError.classList.remove('hidden');
        return false;
      }
      newPasswordError.classList.add('hidden');
      return true;
    }

    function validateConfirmPassword() {
      const value = confirmPassword.value.trim();
      if (value !== newPassword.value) {
        confirmPasswordError.textContent = "Passwords do not match.";
        confirmPasswordError.classList.remove('hidden');
        return false;
      }
      confirmPasswordError.classList.add('hidden');
      return true;
    }

    // Input Listeners
    nameInput.addEventListener('input', validateName);
    emailInput.addEventListener('input', validateEmail);
    currentPassword.addEventListener('input', validateCurrentPassword);
    newPassword.addEventListener('input', validateNewPassword);
    confirmPassword.addEventListener('input', validateConfirmPassword);

    // AJAX Profile Update
    profileForm.addEventListener("submit", async function (e) {
      e.preventDefault();
      if (!validateName() || !validateEmail()) return;

      const formData = new FormData(profileForm);
      const data = Object.fromEntries(formData);

      try {
        const response = await fetch("/user/update-profile", {
          method: "PUT",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(data),
          credentials: "include",
        });

        const result = await response.json();
        messageContainer.innerHTML = "";

        if (response.ok) {
          showMessage(result.message, "success");
          nameInput.value = result.user.name;
          emailInput.value = result.user.email;
          navWelcomeName.textContent = result.user.name;
        } else {
          showMessage(result.error || "An error occurred.", "error");
        }
      } catch (error) {
        console.error("‚ùå AJAX Profile Update Error:", error);
        showMessage("Network error. Please try again.", "error");
      }
    });

    // AJAX Password Change
    passwordForm.addEventListener("submit", async function (e) {
      e.preventDefault();
      if (!validateCurrentPassword() || !validateNewPassword() || !validateConfirmPassword()) return;

      const formData = new FormData(passwordForm);
      const data = Object.fromEntries(formData);

      try {
        const response = await fetch("/user/change-password", {
          method: "PUT",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(data),
          credentials: "include",
        });

        const result = await response.json();
        messageContainer.innerHTML = "";

        if (response.ok) {
          showMessage(result.message, "success");
          passwordForm.reset();
        } else {
          showMessage(result.error || "An error occurred.", "error");
        }
      } catch (error) {
        console.error("‚ùå AJAX Password Change Error:", error);
        showMessage("Network error. Please try again.", "error");
      }
    });

    // Show Message Helper
    function showMessage(text, type) {
      const div = document.createElement("div");
      div.className = `p-4 rounded-md text-center font-medium ${
        type === "success" ? "bg-[var(--color-green-100)] text-[var(--color-green-500)]" : "bg-[var(--color-red-100)] text-[var(--color-red-500)]"
      }`;
      div.textContent = text;
      messageContainer.appendChild(div);
      setTimeout(() => div.remove(), 5000);
    }
  </script>
</body>