
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin Panel with Enhanced Drawer - Light Mode</title>
  <!-- Include Tailwind CSS (Assumes you've built it with your config) -->
  <link rel="stylesheet" href="/styles/global.css">
  <!-- Include Bootstrap Icons via CDN -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
  <!-- Include Chart.js via CDN -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>

<body class="bg-[var(--color-white)] text-[var(--color-black)] h-screen overflow-x-hidden relative font-sans">
    
    <%- include('../shared/asideBar') %>
  <!-- Main Content -->
  <div id="mainContent" class="p-root-5 w-full transition-filter duration-300 ease-in-out">
    <!-- Header -->
    <div class="flex items-center bg-[var(--color-white)] p-root-3 border-b border-[var(--color-black)] mb-5">
      <button id="menuToggle" class="text-[var(--color-black)] text-2xl p-2 hover:text-[var(--color-red-500)] transition-colors bg-transparent border-none cursor-pointer">☰</button>
      <h1 class="text-[var(--color-black)] text-2xl flex-grow">Welcome, Admin</h1>
    </div>
    <div class="content">
    <!-- Success & Error Messages -->
    <div id="message-container" class="mb-6">
      <% if (errorMessage) { %>
        <div class="bg-[var(--color-red-100)] text-[var(--color-red-700)] border border-[var(--color-red-400)] p-3 rounded-lg"><%= errorMessage %></div>
      <% } %>
      <% if (successMessage) { %>
        <div class="bg-[var(--color-green-100)] text-[var(--color-green-700)] border border-[var(--color-green-400)] p-3 rounded-lg"><%= successMessage %></div>
      <% } %>
    </div>

    <!-- Product Upload Form -->
    <form id="product-form" enctype="multipart/form-data" class="space-y-6 bg-[var(--color-white)] p-6 rounded-lg shadow-lg">
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
        <!-- Left Side: Product Details Section -->
        <div class="space-y-6">
          <h2 class="text-2xl font-semibold text-[var(--color-black)] mb-4">Product Details</h2>

          <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
            <div class="space-y-2">
              <label for="category" class="block text-sm font-medium text-[var(--color-black)]">Category</label>
              <div class="flex items-center gap-2">
                <select 
                  name="category" 
                  id="category" 
                  class="w-full p-3 bg-[var(--color-gray-50)] border border-[var(--color-gray-300)] rounded-lg focus:ring-2 focus:ring-[var(--color-red-500)] focus:outline-none transition-all duration-300 shadow-sm hover:shadow-md">
                  <option value="Flash Sales">Flash Sales</option>
                  <option value="New Arrival">New Arrival</option>
                  <option value="Explore our Products">Explore our Products</option>
                  <option value="Best Selling Products">Best Selling Products</option>
                  <!-- Dynamically added categories will appear here -->
                </select>
                <button 
                  type="button" 
                  id="addCategoryBtn" 
                  class="p-2 bg-[var(--color-red-500)] text-[var(--color-white)] rounded-lg hover:bg-[var(--color-red-700)] transition-all duration-300">
                  <i class="bi bi-plus"></i>
                </button>
              </div>
              <input 
                type="text" 
                id="newCategory" 
                class="mt-2 w-full p-3 bg-[var(--color-gray-50)] border border-[var(--color-gray-300)] rounded-lg focus:ring-2 focus:ring-[var(--color-red-500)] focus:outline-none hidden transition-all duration-300 shadow-sm hover:shadow-md" 
                placeholder="Enter new category" />
              <div id="categoryError" class="text-[var(--color-red-500)] text-sm mt-1 hidden"></div>
            </div>

            <div class="space-y-2">
              <label for="brand" class="block text-sm font-medium text-[var(--color-black)]">Brand</label>
              <input 
                type="text" 
                name="brand" 
                id="brand" 
                class="w-full p-3 bg-[var(--color-gray-50)] border border-[var(--color-gray-300)] rounded-lg focus:ring-2 focus:ring-[var(--color-red-500)] focus:outline-none transition-all duration-300 shadow-sm hover:shadow-md" 
                required />
              <div id="brandError" class="text-[var(--color-red-500)] text-sm hidden"></div>
            </div>
          </div>

          <div class="space-y-2">
            <label for="name" class="block text-sm font-medium text-[var(--color-black)]">Product Name</label>
            <input 
              type="text" 
              name="name" 
              id="name" 
              class="w-full p-3 bg-[var(--color-gray-50)] border border-[var(--color-gray-300)] rounded-lg focus:ring-2 focus:ring-[var(--color-red-500)] focus:outline-none transition-all duration-300 shadow-sm hover:shadow-md" 
              required />
            <div id="nameError" class="text-[var(--color-red-500)] text-sm hidden"></div>
          </div>

          <div class="space-y-2">
            <label for="price" class="block text-sm font-medium text-[var(--color-black)]">Price</label>
            <input 
              type="number" 
              name="price" 
              id="price" 
              class="w-full p-3 bg-[var(--color-gray-50)] border border-[var(--color-gray-300)] rounded-lg focus:ring-2 focus:ring-[var(--color-red-500)] focus:outline-none transition-all duration-300 shadow-sm hover:shadow-md" 
              required />
            <div id="priceError" class="text-[var(--color-red-500)] text-sm hidden"></div>
          </div>

          <div class="space-y-2">
            <label for="description" class="block text-sm font-medium text-[var(--color-black)]">Description</label>
            <textarea 
              name="description" 
              id="description" 
              rows="5" 
              class="w-full p-3 bg-[var(--color-gray-50)] border border-[var(--color-gray-300)] rounded-lg focus:ring-2 focus:ring-[var(--color-red-500)] focus:outline-none resize-none transition-all duration-300 shadow-sm hover:shadow-md" 
              required></textarea>
          </div>
        </div>

        <!-- Right Side: Upload & Offers Section -->
        <div class="space-y-6">
          <h2 class="text-2xl font-semibold text-[var(--color-black)] mb-4">Additional Details</h2>

          <div class="space-y-2">
            <label for="image" class="block text-sm font-medium text-[var(--color-black)]">Upload Product Image</label>
            <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
              <div class="border-2 border-[var(--color-gray-300)] p-6 rounded-lg text-center flex flex-col items-center justify-center">
                <div id="image-preview-container" class="w-full h-48 bg-[var(--color-gray-50)] flex items-center justify-center text-[var(--color-gray-500)] rounded-lg">
                  <img id="image-preview" class="hidden w-full h-48 object-cover rounded-lg">
                  <p id="preview-text" class="text-center">Preview</p>
                </div>
              </div>
              <div class="border-2 border-dashed border-[var(--color-gray-300)] p-6 rounded-lg text-center flex flex-col items-center justify-center">
                <i class="bi bi-cloud-upload text-[var(--color-gray-500)] text-3xl mb-4"></i>
                <p class="text-[var(--color-gray-500)] mb-2">
                  <label for="image" class="cursor-pointer text-[var(--color-red-500)] hover:text-[var(--color-red-700)] transition-colors duration-300">Click to browse</label>
                </p>
                <input 
                  type="file" 
                  name="image" 
                  id="image" 
                  class="hidden" 
                  accept="image/*" />
                <div id="imageError" class="text-[var(--color-red-500)] text-sm mt-1 hidden"></div>
              </div>
            </div>
          </div>

          <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
            <div class="space-y-2">
              <label for="quantity" class="block text-sm font-medium text-[var(--color-black)]">Quantity</label>
              <input 
                type="number" 
                name="quantity" 
                id="quantity" 
                class="w-full p-3 bg-[var(--color-gray-50)] border border-[var(--color-gray-300)] rounded-lg focus:ring-2 focus:ring-[var(--color-red-500)] focus:outline-none transition-all duration-300 shadow-sm hover:shadow-md" 
                required />
              <div id="quantityError" class="text-[var(--color-red-500)] text-sm hidden"></div>
            </div>

            <div class="space-y-2">
              <label for="discountPrice" class="block text-sm font-medium text-[var(--color-black)]">Discount Price</label>
              <input 
                type="number" 
                name="discountPrice" 
                id="discountPrice" 
                class="w-full p-3 bg-[var(--color-gray-50)] border border-[var(--color-gray-300)] rounded-lg focus:ring-2 focus:ring-[var(--color-red-500)] focus:outline-none transition-all duration-300 shadow-sm hover:shadow-md" />
              <div id="discountError" class="text-[var(--color-red-500)] text-sm hidden"></div>
            </div>
          </div>

          <div class="space-y-2">
            <label for="keywords" class="block text-sm font-medium text-[var(--color-black)]">Keywords</label>
            <input 
              type="text" 
              name="keywords" 
              id="keywords" 
              class="w-full p-3 bg-[var(--color-gray-50)] border border-[var(--color-gray-300)] rounded-lg focus:ring-2 focus:ring-[var(--color-red-500)] focus:outline-none transition-all duration-300 shadow-sm hover:shadow-md" 
              placeholder="shirt, casual, men" />
            <div id="keywordsError" class="text-[var(--color-red-500)] text-sm hidden"></div>
          </div>

          <button 
            type="submit" 
            class="w-full px-4 py-3 bg-[var(--color-red-500)] text-[var(--color-white)] font-semibold rounded-lg hover:bg-[var(--color-red-700)] transition-all duration-300 shadow-md hover:shadow-lg">
            Add Product
          </button>
        </div>
      </div>
    </form>
  </div>
  </div>

  <!-- <script type="module" src="/js/addProduct.js"></script> -->
   <script>
    document.addEventListener("DOMContentLoaded", function () {
  const form = document.getElementById("product-form");
  const messageContainer = document.getElementById("message-container");
  const imageInput = document.getElementById("image");
  const imagePreview = document.getElementById("image-preview");
  const previewText = document.getElementById("preview-text");
  const categorySelect = document.getElementById("category");
  const addCategoryBtn = document.getElementById("addCategoryBtn");
  const newCategoryInput = document.getElementById("newCategory");

  // Image Preview
  imageInput.addEventListener("change", function (event) {
    const file = event.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = function (e) {
        imagePreview.src = e.target.result;
        imagePreview.classList.remove("hidden");
        previewText.classList.add("hidden");
      };
      reader.readAsDataURL(file);
    }
  });

  // Dynamic Category Addition
  let customCategories = JSON.parse(localStorage.getItem("customCategories")) || [];

  // Populate existing custom categories
  customCategories.forEach(category => {
    const option = document.createElement("option");
    option.value = category;
    option.textContent = category;
    categorySelect.appendChild(option);
  });

  addCategoryBtn.addEventListener("click", function () {
    newCategoryInput.classList.toggle("hidden");
    if (!newCategoryInput.classList.contains("hidden")) {
      newCategoryInput.focus();
    }
  });

  newCategoryInput.addEventListener("keypress", function (e) {
    if (e.key === "Enter" && this.value.trim() !== "") {
      const newCategory = this.value.trim();
      if (!Array.from(categorySelect.options).some(opt => opt.value === newCategory)) {
        const option = document.createElement("option");
        option.value = newCategory;
        option.textContent = newCategory;
        categorySelect.appendChild(option);
        categorySelect.value = newCategory;
        customCategories.push(newCategory);
        localStorage.setItem("customCategories", JSON.stringify(customCategories));
      }
      this.value = "";
      this.classList.add("hidden");
    }
  });

  // Form Submission
  form.addEventListener("submit", async function (e) {
    e.preventDefault();

    const formData = new FormData(form);

    try {
      const response = await fetch("/admin/product/product/add", {
        method: "POST",
        body: formData,
      });

      const result = await response.json();
      messageContainer.innerHTML = "";

      if (response.ok) {
        showMessage(result.message, "success");
        form.reset();
        imagePreview.classList.add("hidden");
        previewText.classList.remove("hidden");
      } else {
        showMessage(result.error || "An error occurred.", "error");
      }
    } catch (error) {
      console.error("❌ AJAX Error:", error);
      showMessage("Network error. Please try again.", "error");
    }
  });

  // Show Message
  function showMessage(text, type) {
    const div = document.createElement("div");
    div.className = `bg-[var(--color-${type === "success" ? "green" : "red"}-100)] text-[var(--color-${type === "success" ? "green" : "red"}-700)] border border-[var(--color-${type === "success" ? "green" : "red"}-400)] p-3 rounded-lg`;
    div.textContent = text;
    messageContainer.appendChild(div);
    setTimeout(() => div.remove(), 5000);
  }
});
   </script>
   
 <!-- Link the JavaScript file -->
 <script src="/js/adminjs.js"></script>
</body>
</html>