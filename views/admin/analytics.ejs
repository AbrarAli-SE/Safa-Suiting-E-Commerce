<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin Panel</title>
  <link rel="stylesheet" href="/styles/global.css">
  <link rel="shortcut icon" href="/assests/safaLogo.png" type="image/x-icon">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body class="bg-[var(--color-white)] text-[var(--color-black)] h-screen overflow-x-hidden relative font-sans">
  <%- include('../shared/asideBar') %>
  <%- include('../shared/adminheader') %>

  <div id="mainContent" class="p-root-5 w-full transition-filter duration-300 ease-in-out">
    <div class="pt-16">
      <div class="content">
        <!-- Analytics Cards -->
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 mb-8">
          <div class="analytics-card bg-[var(--color-red-500)] text-[var(--color-white)] p-root-4 rounded-lg card-shadow hover:shadow-lg transition-all duration-300">
            <h2 class="text-lg font-semibold">Total Revenue</h2>
            <p class="text-3xl font-bold">PKR <%= Math.round(totalRevenue).toLocaleString('en-PK') %></p>
          </div>
          <div class="analytics-card bg-[var(--color-gray-900)] text-[var(--color-white)] p-root-4 rounded-lg card-shadow hover:shadow-lg transition-all duration-300">
            <h2 class="text-lg font-semibold">Total Orders</h2>
            <p class="text-3xl font-bold"><%= totalOrders.toLocaleString() %></p>
          </div>
          <div class="analytics-card bg-[var(--color-gray-600)] text-[var(--color-white)] p-root-4 rounded-lg card-shadow hover:shadow-lg transition-all duration-300">
            <h2 class="text-lg font-semibold">New Customers</h2>
            <p class="text-3xl font-bold"><%= newCustomers.toLocaleString() %></p>
          </div>
          <div class="analytics-card bg-[var(--color-red-700)] text-[var(--color-white)] p-root-4 rounded-lg card-shadow hover:shadow-lg transition-all duration-300">
            <h2 class="text-lg font-semibold">Products Sold</h2>
            <p class="text-3xl font-bold"><%= productsSold.toLocaleString() %></p>
          </div>
        </div>

        <!-- Grid Layout for Charts -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div class="bg-[var(--color-white)] p-root-5 rounded-lg card-shadow">
            <h2 class="text-xl font-semibold text-[var(--color-red-500)] mb-4">Order Analytics</h2>
            <canvas id="orderChart"></canvas>
          </div>
          <div class="bg-[var(--color-white)] p-root-5 rounded-lg card-shadow">
            <h2 class="text-xl font-semibold text-[var(--color-red-500)] mb-4">Revenue Analytics</h2>
            <canvas id="revenueChart"></canvas>
          </div>
          <div class="bg-[var(--color-white)] p-root-5 rounded-lg card-shadow">
            <h2 class="text-xl font-semibold text-[var(--color-red-500)] mb-4">Product Categories</h2>
            <canvas id="categoryChart"></canvas>
          </div>
          <div class="bg-[var(--color-white)] p-root-5 rounded-lg card-shadow">
            <h2 class="text-xl font-semibold text-[var(--color-red-500)] mb-4">Customer Growth</h2>
            <canvas id="growthChart"></canvas>
          </div>
        </div>
      </div>
    </div>
  </div>

 <!-- Pass Data to JavaScript and Prepare Chart Data -->
<script>
  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];

  const analyticsData = {
    orderAnalytics: <%- JSON.stringify(orderAnalytics) %>,
    revenueAnalytics: <%- JSON.stringify(revenueAnalytics) %>,
    categoryAnalytics: <%- JSON.stringify(categoryAnalytics) %>,
    growthAnalytics: <%- JSON.stringify(growthAnalytics) %>
  };

  // Fallback if data is empty
  const fallbackAnalytics = {
    orderAnalytics: [],
    revenueAnalytics: [],
    categoryAnalytics: [],
    growthAnalytics: []
  };

  const safeAnalyticsData = {
    orderAnalytics: analyticsData.orderAnalytics.length ? analyticsData.orderAnalytics : fallbackAnalytics.orderAnalytics,
    revenueAnalytics: analyticsData.revenueAnalytics.length ? analyticsData.revenueAnalytics : fallbackAnalytics.revenueAnalytics,
    categoryAnalytics: analyticsData.categoryAnalytics.length ? analyticsData.categoryAnalytics : fallbackAnalytics.categoryAnalytics,
    growthAnalytics: analyticsData.growthAnalytics.length ? analyticsData.growthAnalytics : fallbackAnalytics.growthAnalytics
  };

  // Prepare Order Data
  const orderData = {
    labels: safeAnalyticsData.orderAnalytics.map(item => months[item._id - 1] || 'Unknown'),
    datasets: [{
      label: 'Incoming Orders',
      data: safeAnalyticsData.orderAnalytics.map(item => item.incoming || 0),
      backgroundColor: '#FF0000',
      borderColor: '#000000',
      borderWidth: 2,
      fill: true,
      pointBackgroundColor: '#000000',
      pointBorderColor: '#FFFFFF',
      pointRadius: 5
    }, {
      label: 'Outgoing Orders',
      data: safeAnalyticsData.orderAnalytics.map(item => item.outgoing || 0),
      backgroundColor: '#000000',
      borderColor: '#FF0000',
      borderWidth: 2,
      fill: true,
      pointBackgroundColor: '#FF0000',
      pointBorderColor: '#FFFFFF',
      pointRadius: 5
    }]
  };

  // Prepare Revenue Data
  const revenueData = {
    labels: safeAnalyticsData.revenueAnalytics.map(item => months[item._id - 1] || 'Unknown'),
    datasets: [{
      label: 'Revenue',
      data: safeAnalyticsData.revenueAnalytics.map(item => item.revenue || 0),
      backgroundColor: '#FF0000',
      borderColor: '#000000',
      borderWidth: 2,
      fill: true,
      pointBackgroundColor: '#000000',
      pointBorderColor: '#FFFFFF',
      pointRadius: 5
    }]
  };

  // Prepare Category Data
  const categoryData = {
    labels: safeAnalyticsData.categoryAnalytics.map(item => item._id || 'Unknown'),
    datasets: [{
      label: 'Products Sold',
      data: safeAnalyticsData.categoryAnalytics.map(item => item.count || 0),
      backgroundColor: safeAnalyticsData.categoryAnalytics.map((_, index) => index % 2 === 0 ? '#FF0000' : '#000000'),
      borderColor: safeAnalyticsData.categoryAnalytics.map((_, index) => index % 2 === 0 ? '#000000' : '#FF0000'),
      borderWidth: 2,
      barThickness: 20
    }]
  };

  // Prepare Growth Data
  const growthData = {
    labels: safeAnalyticsData.growthAnalytics.map(item => months[item._id - 1] || 'Unknown'),
    datasets: [{
      label: 'Customer Growth',
      data: safeAnalyticsData.growthAnalytics.map(item => item.count || 0),
      backgroundColor: '#000000',
      borderColor: '#FF0000',
      borderWidth: 2,
      fill: true,
      pointBackgroundColor: '#FF0000',
      pointBorderColor: '#FFFFFF',
      pointRadius: 5
    }]
  };
</script>
<script src="/js/adminjs.js"></script>
</body>
</html>